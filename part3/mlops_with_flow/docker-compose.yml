version: '3.7'

services:
  mysql:
    build: ./mysql
    image: custom-mysql
    container_name: mlops-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  airflow-webserver:
    build: ./airflow
    image: custom-airflow:2.8.0
    container_name: airflow-webserver
    depends_on:
      - mysql
    environment:
      AIRFLOW__CORE__PYTHON_DEPS: pymysql
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+pymysql://airflow:airflow@mysql:3306/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./dags:/opt/airflow/dags
    ports:
      - "8080:8080"
    command: >
      bash -c "
        airflow db migrate &&
        airflow users create --username admin --password admin --firstname admin --lastname admin --role Admin --email admin@example.com &&
        airflow webserver
      "

  airflow-scheduler:
    image: custom-airflow:2.8.0
    container_name: airflow-scheduler
    depends_on:
      - mysql
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: mysql+pymysql://airflow:airflow@mysql:3306/airflow
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
    volumes:
      - ./dags:/opt/airflow/dags
    command: >
      bash -c "sleep 60; while ! airflow db check; do sleep 5; done; airflow scheduler"

  mlflow:
    build: ./mlflow
    container_name: mlflow
    depends_on:
      - mysql
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:5000
      MLFLOW_BACKEND_STORE_URI: mysql+pymysql://airflow:airflow@mysql:3306/mlflow
      ARTIFACT_ROOT: /mlflow/artifacts
    volumes:
      - ./mlruns:/mlflow/artifacts
    ports:
      - "5000:5000"
    command: >
      mlflow server
      --backend-store-uri mysql+pymysql://airflow:airflow@mysql:3306/mlflow
      --default-artifact-root /mlflow/artifacts
      --host 0.0.0.0
      --port 5000

volumes:
  mysql_data:

